# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: skadi
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 11
        cache: 'gradle'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build --no-daemon
      env:
        SQL_PASSWORD: mysecretpassword
        SQL_USER: postgres
        SQL_DB: skadi
        SQL_HOST: "localhost:5432"
        GITHUB_SECRET: ${{ secrets.OAUTH_SECRET }}
        GITHUB_ID: ${{ secrets.OAUTH_ID }}
        COOKIE_SALT: ${{ secrets.COOKIE_SALT }}
    - name: Archive test results
      uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: test-results
        path: server/build/reports

